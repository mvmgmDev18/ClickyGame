{"version":3,"sources":["images/Balrog.png","images/Blanka.png","images/ChunLi.png","images/Dhalsim.png","images/Ehonda.png","images/Guile.png","images/Ken.png","images/MBison.png","images/Ryu.png","images/Sagat.png","images/Vega.png","images/Zangief.png","components/Navbar/Navbar.js","components/Character/Character.js","components/Container/Container.js","components/Footer/Footer.js","components/Banner/Banner.js","images.js","components/ClickyGame.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","navMsgColor","navMessage","score","highScore","Character","onClick","e","clickEvent","target","src","name","alt","Container","shake","characters","map","i","components_Character_Character","key","Footer","Banner","images","Balrog","Blanka","ChunLi","Dhalsim","Ehonda","Guile","Ken","MBison","Ryu","Sagat","Vega","Zangief","ClickyGame","state","allCharacters","_this","shuffleArray","wasClicked","checkClicked","bind","Object","assertThisInitialized","newArr","slice","shuffleArr","length","push","splice","Math","floor","random","clickedElem","_this2","this","prevState","shuffled","includes","setState","setTimeout","components_Navbar_Navbar","components_Banner_Banner","components_Container_Container","components_Footer_Footer","Component","ReactDOM","render","components_ClickyGame","document","getElementById"],"mappings":"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","file":"static/js/main.cf048d7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Balrog.222fcdaa.png\";","module.exports = __webpack_public_path__ + \"static/media/Blanka.f605dedc.png\";","module.exports = __webpack_public_path__ + \"static/media/ChunLi.fc3ce4ab.png\";","module.exports = __webpack_public_path__ + \"static/media/Dhalsim.3b8562c7.png\";","module.exports = __webpack_public_path__ + \"static/media/Ehonda.5f7e83e7.png\";","module.exports = __webpack_public_path__ + \"static/media/Guile.6d4874e7.png\";","module.exports = __webpack_public_path__ + \"static/media/Ken.9d40fc9d.png\";","module.exports = __webpack_public_path__ + \"static/media/MBison.a295bc53.png\";","module.exports = __webpack_public_path__ + \"static/media/Ryu.5fdf4e54.png\";","module.exports = __webpack_public_path__ + \"static/media/Sagat.79c1e1b5.png\";","module.exports = __webpack_public_path__ + \"static/media/Vega.986d4875.png\";","module.exports = __webpack_public_path__ + \"static/media/Zangief.271431ae.png\";","import React from 'react';\nimport './Navbar.css';\n\nconst Navbar = props => (\n  <div className=\"navbar \">\n    <div>Street Fighter II Clicky Game</div>\n    <div className={props.navMsgColor}>{props.navMessage}</div>\n    <div>\n      Score: {props.score} <span className=\"pipe\">|</span> High Score: {props.highScore}\n    </div>\n  </div>\n);\n\nexport default Navbar;","import React from 'react';\nimport './Character.css';\n\n// the onClick function is defined as a callback so that the clicked elements value\n// can be passed to props.clickEvent to check if the image has been clicked or not\nconst Character = props => (\n  <div className=\"card\" onClick={e => props.clickEvent(e.target.src)}>\n    <img className=\"card-img-top card-height\" src={props.name} alt=\"\" />\n  </div>\n);\n\nexport default Character;","import React from 'react';\nimport './Container.css';\nimport Character from '../Character';\n\n// main container for each Character component\n// loops through each index in props.characters, which contains an array of character images\n// to create a new Character component for each image\n// attaches the passed down clickEvent function to each Character component\nconst Container = props => (\n  // loops through\n  <div\n    className={\n      props.shake\n        ? 'container d-flex flex-wrap justify-content-center shake'\n        : 'container d-flex flex-wrap justify-content-center'\n    }\n  >\n    {props.characters.map((a, i) => <Character name={a} key={i} clickEvent={props.clickEvent} />)}\n  </div>\n);\n\nexport default Container;","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => <div className=\"footer text-center\">&copy; Copyright 2018 Michael Sayson</div>;\n\nexport default Footer;","import React from 'react';\nimport './Banner.css';\n\nconst Banner = () => (\n  <div className=\"banner text-center d-flex align-items-center justify-content-center\">\n    <p className=\"m-0\">Click on an image to earn points, but don't click on any more than once!</p>\n  </div>\n);\nexport default Banner;","//http://streetfighterdojo.com/superturbo/images/characters/portraits/\nimport Balrog from './images/Balrog.png';\nimport Blanka from './images/Blanka.png';\nimport ChunLi from './images/ChunLi.png';\nimport Dhalsim from './images/Dhalsim.png';\nimport Ehonda from './images/Ehonda.png';\nimport Guile from './images/Guile.png';\nimport Ken from './images/Ken.png';\nimport MBison from './images/MBison.png';\nimport Ryu from './images/Ryu.png';\nimport Sagat from './images/Sagat.png';\nimport Vega from './images/Vega.png';\nimport Zangief from './images/Zangief.png';\n\nconst images = [\n  Balrog,\n  Blanka,\n  ChunLi,\n  Dhalsim,\n  Ehonda,\n  Guile,\n  Ken,\n  MBison,\n  Ryu,\n  Sagat,\n  Vega,\n  Zangief\n];\n\nexport default images;","import React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Container from './Container';\nimport Footer from './Footer';\nimport Banner from './Banner';\nimport images from '../images';\n\nclass ClickyGame extends Component {\n    state = {\n        score: 0,\n        highScore: 0,\n\n        //class value stored to assign to navMessage\n        navMsgColor: '',\n\n        //Messages for intro, success, and failures.\n        navMessage: 'Click an image to start!',\n\n        //array of image urls\n        allCharacters: this.shuffleArray(),\n\n        //track clicked element.\n        wasClicked: [],\n\n        //container shakes if guess is incorrect.\n        shake: false\n    };\n\n\n    clickEvent = this.checkClicked.bind(this);\n\n    //Shuffle the array of images when DOM loads and an image is clicked.\n    shuffleArray() {\n        //copies the current array of characters to modify it by value and not by reference.\n        const newArr = images.slice();\n\n        //stores the shuffled array.\n        const shuffleArr = [];\n\n        //Random generator for the array\n        while (newArr.length > 0) {\n            shuffleArr.push(newArr.splice(Math.floor(Math.random() * newArr.length), 1)[0]);\n        }\n\n        return shuffleArr;\n    }\n\n    checkClicked(clickedElem) {\n        //Creates a copy of the wasClicked array to modify it by value, and not by reference. wasClicked stores all previous clicked images.\n        const prevState = this.state.wasClicked.slice();\n\n        //Shuffles the images.\n        const shuffled = this.shuffleArray();\n\n        //Score tracking.\n        let score = this.state.score;\n        let highScore = this.state.highScore;\n\n        //If clicked item is not in wasClicked, then it hasn't been clicked and the score increments.\n        if (!this.state.wasClicked.includes(clickedElem)) {\n            //If current score = highScore, then new highScore value.\n            if (score === highScore) {\n                score++;\n                highScore++;\n\n                //if score != highScore, then score value increases.\n            } else {\n                score++;\n            }\n\n            // adds the clicked item to wasClicked to track that it has been clicked\n            prevState.push(clickedElem);\n        }\n\n        //current score resets if element has been clicked 2x.\n        if (this.state.wasClicked.includes(clickedElem)) {\n            let score = 0;\n            return this.setState({\n                score: score,\n                highScore: highScore,\n                navMsgColor: 'incorrect',\n                navMessage: 'Incorrect guess!',\n                allCharacters: shuffled,\n                wasClicked: [],\n                shake: true\n            });\n        }\n\n        // if this runs, then the same element has not been clicked twice and the score is increased\n        this.setState({\n            score: score,\n            highScore: highScore,\n            navMsgColor: 'correct',\n            navMessage: 'You Guessed Correctly!',\n            allCharacters: shuffled,\n            wasClicked: prevState,\n            shake: false\n        });\n\n        //Removes the green correct indicator on a successful click after .5s to re-render the class on each success.\n        return setTimeout(() => this.setState({ navMsgColor: '' }), 500);\n    }\n\n    //Renders score to the navbar.\n    //Passes tje randomized state.allCharacters array to Container to create a Character component for each image.\n    //Passes the this.checkClicked down to container to pass to each Character component to be used for the click event.\n    render() {\n        const state = this.state;\n        return (\n            <div>\n                <Navbar\n                    score={state.score}\n                    highScore={state.highScore}\n                    navMessage={state.navMessage}\n                    navMsgColor={state.navMsgColor}\n                />\n                <Banner />\n                <Container\n                    shake={state.shake}\n                    characters={state.allCharacters}\n                    clickEvent={this.clickEvent}\n                />\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default ClickyGame;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ClickyGame from './components/ClickyGame';\nimport './index.css';\n\nReactDOM.render(<ClickyGame />, document.getElementById('root'));\n"],"sourceRoot":""}